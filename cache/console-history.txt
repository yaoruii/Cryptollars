await gameTest.connect(admin).call.get_current_health(player1.address);
await gameTest.connect(admin).get_current_health(player1.address).call();
await gameTest.connect(admin).get_current_health(player1.address);
const health_before =await gameTest.connect(admin).get_current_health(player1.address);
const health_before =await gameTest.connect(admin).get_current_health();
    await gameTest.connect(player1).initialize("Jack");
    await gameTest.connect(admin).create_monster();
    const gameTest = await game.connect(admin).deploy();
    const [admin, player1, player2] = await ethers.getSigners();
const game = await ethers.getContractFactory("Game");
await instance.get_storage(deployer.address, { from: deployer.address });
await instance.get_storage_len(deployer.address, { from: deployer.address });
    await instance.initialize("deployer",{from:deployer.address});
    instance = await game.deploy();
    [deployer, player, opponent] = await ethers.getSigners();
    game = await ethers.getContractFactory("Game");
await instance.get_storage( { from: deployer.address });
await instance.get_storage_len( { from: deployer.address });
    await instance.initialize("deployer",{from:deployer.address});
    instance = await game.deploy();
    [deployer, player, opponent] = await ethers.getSigners();
    game = await ethers.getContractFactory("Game");
await instance.get_storage( { from: deployer.address });
await instance.get_storage_len( { from: deployer.address });
await instance.initialize("deployer",{from:deployer.address});
await instance.get_storage_len( { from: deployer.address });
    instance = await game.deploy();
    [deployer, player, opponent] = await ethers.getSigners();
game = await ethers.getContractFactory("Game");
await instance.get_storage_len( { from: deployer.address });
await instance.get_storage_len()
    await instance.initialize("deployer",{from:deployer.address});
    instance = await game.deploy();
[deployer, player, opponent] = await ethers.getSigners();
game = await ethers.getContractFactory("Game");
await instance.get_storage_len()
await instance.initialize("deployer",{from:deployer.address});
await instance.get_storage_len()
instance.get_storage_len()
instance = await game.deploy();
[deployer, player, opponent] = await ethers.getSigners();
game = await ethers.getContractFactory("Game");
player[4]
await instance.players(deployer.address)[0];
await instance.players(deployer.address);
let player = await instance.players(deployer.address);
 await instance.initialize("deployer",{from:deployer.address});
instance = await game.deploy();
 [deployer, player, opponent] = await ethers.getSigners();
game = await ethers.getContractFactory("Game");
exit
await instance.players(addr.address)
instance.players(addr.address)
addr.address
addr
[addr ] =  await ethers.getSigners()
instance.players(await ethers.getSigners()[0])
instance.players
instance.__proto__
instance  = await game.deploy()
game.__proto__
game.deploy()
game = await ethers.getContractFactory("Game")
ethers